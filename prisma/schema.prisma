// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// schema.prisma

model Post {
  id        String  @id @default(cuid()) @map("_id") @db.ObjectId
  title     String
  content   String?
  published Boolean @default(false)
  author    User?@relation(fields:[authorId], references:[id])
  authorId  String? @db.ObjectId
  }

model Account {
  id                 String  @id @default(cuid()) @map("_id") @db.ObjectId
  userId             String  @map("user_id") @db.ObjectId
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields:[userId], references:[id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  }

model Session {
  id           String   @id @default(cuid()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id") @db.ObjectId
  expires      DateTime
  user         User     @relation(fields:[userId], references:[id], onDelete: Cascade)
  }

model User {
  id            String    @id @default(cuid()) @map("_id") @db.ObjectId
  name          String?
  email         String? @unique
  emailVerified DateTime?
  hashedPassword String?
  image         String?
  posts         Post[]
  accounts      Account[]
  sessions      Session[]
  }

model VerificationToken {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  }
